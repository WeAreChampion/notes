--1.将新对象预留在新生代.
1.配置新生代大小足够大,like:
1).-Xmn6M(设置新生代大小6M)
2).-XX:NewRatio(-XX:NewRatio设置老年代与新生代的比例)
3).-XX:SurvivorRatio=2(指定新生代大小10M，eden区是s0的2倍大小：eden=(10/(1+1+2))*2=5M(s0=s1)).设置一个较大的新生代预留新对象。设置合理的survivor区(from区)且提高survivor区(from区)的使用率，可以将年轻对象保留在新生代。一般来说，当survivor区的空间不够，或者占用量达到50%，就会将对象进入老年代(不管对象的年龄有多大)。

2.大对象进入老年代
# 设置大对象直接进入老年代的阈值。当对象的大小超过该值，将直接在老年代分配。(-XX:PretenureSizeThreshold=1000000)即1M
-XX:PretenureSizeThreshold

3.设置对象进入老年代的年龄
一般情况，年轻对象放新生代，年老对象放在老年代。为此，jvm为每个对象都维护一个年龄。如果对象在eden区，经过一次GC后还存活，则被移到survivor区，对象年龄加1。对象每经过一次GC依然存活，则年龄加1.当对象年龄达到阈值时，就移入老年代，成为老年对象。
# 对象年龄的最大值，默认值15。对象实际进入老年代的年龄是虚拟机在运行时根据内存使用情况动态计算的。
# 实际晋升老年代年龄等于动态计算得到的年龄与该值中较小的值。希望对象尽可能的停留在新生代，可设置一个较大的阈值。
# -XX:MaxTenuringThreshold=1:所有经过一次GC的对象可以直接进入老年代。
-XX:MaxTenuringThreshold

4.稳定与震荡堆大小
稳定堆大小对垃圾回收有利，即-Xmx(最大堆)与-Xms(初始堆/最小堆)大小一致.稳定堆可以减少GC的次数，但同时增加了每次GC的时间。为此，JVM提供了用于压缩和扩展堆空间的参数
# 当-Xmx与-Xms大小相等时，以下两个参数无效
# 设置堆空间最小空闲比例，默认值40。当堆空间的空闲内存小于这个数值，JVM便会扩展堆空间。
-XX:MinHeapFreeRatio
# 设置堆空间最大空闲比例，默认值70。当堆空间的空闲内存大于这个数值，得到一个较小的堆。
-XX:MaxHeapFreeRatio

5.吞吐量优先案例
# 在拥有4G和32核计算机上JVM Opts
#-Xmx=-Xms=3800m,新生代-Xmn:2g,线程栈大小-Xss:128k(减少剩余的系统内支持更多的线程),-XX:+UseParallelGC(新生代使用并行回收收集器,尽可能减少GC时间),-XX:ParallelGCThreads(设置垃圾回收的线程数，通常情况下可以和cpu相等，cpu较多设置值也可以较小),-XX:+UseParallelOldGC(老年代也使用并行回收收集器)
-Xmx3800m -Xms3800m -Xmn2g -Xss128k -XX:+UseParallelGC -XX:ParallelGCThreads=20 -XX:+UseParallelOldGC

6.使用大页案例
在solaris系统中，JVM可以支持大页的使用。使用大的内存页可以增强cpu的内存寻址能力，提升系统的性能
# 设置大页的大小,-XX:LargePageSizeInBytes=256m
-XX:LargePageSizeInBytes
-Xmx3800m -Xms3800m -Xmn2g -Xss128k -XX:+UseParallelGC -XX:ParallelGCThreads=20 -XX:+UseParallelOldGC -XX:LargePageSizeInBytes=256m

7.降低停顿案例
首先考虑的是关注系统停顿的CMS回收器，其次减少FullGC的次数，应尽可能将对象预留在新生代。因为新生代MinorGC的成本远远小于老年代的FullGC。
-Xmx3800m -Xms3800m -Xmn2g -Xss128k -XX:+UseParallelGC -XX:ParallelGCThreads=20 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:SurvivorRatio=8 -XX:TargetSurvivorRatio=90 -XX:MaxTenuringThreshold=31

# 解释
-XX:ParallelGCThreads=20:设置垃圾回收的线程数;-XX:+UseParNewGC:新生代使用并行回收器;-XX:+UseConcMarkSweepGC:老年代使用CMS收集器降低停顿;-XX:SurvivorRatio=8:设置eden区与survivor区的比例8-1,稍大的survivor空间可以提高在新生代回收生命周期较短的对象的可能性;-XX:TargetSurvivorRatio=90:设置survivor区的可使用率，默认值50%，此处设置90%，提高了survivor区的使用率，当存放的对象超过这个百分比，则对象会向老年代压缩，因此有助于将对象预留在新生代;-XX:MaxTenuringThreshold=31:设置年轻对象晋升到老年代的年龄,对象经过多少次MinorGC依然存活则直接进入老年代.